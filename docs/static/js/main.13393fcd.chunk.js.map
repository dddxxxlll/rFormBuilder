{"version":3,"sources":["components/formBuilder/index.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Column","Table","Option","Select","FormBuilder","props","useState","questionSelect","setQuestionSelect","Array","optionSelection","setOptionSelection","selectQClassName","index","oIndex","question","className","queLimit","arrange","SelectQuestion","prop","console","log","onClick","e","stopPropagation","selectQuestion","formData","length","CaretUpOutlined","switchQuestion","CaretDownOutlined","DeleteOutlined","delQuestion","des","options","map","option","key","value","selectOption","queType","DownOutlined","style","marginRight","hasInput","danger","marginTop","size","delOption","addOption","selectQuestionF","checkType","type","delQuestionF","switchQuestionF","roc","addOptionF","delOptionF","ifShow","i","queOnly","checkvalue","v","check","selectChange","data","target","updateFormDataF","maxWr","cuptColumn","num","str","toString","checkCheckbox","replace","isArray","editMode","width","dataSource","row","title","dataIndex","column","selectType","name","render","text","Group","onChange","checked","isShow","required","class","inputValue","defaultValue","date","maxLength","fillType","TextArea","Input","App","setFormData","setEditMode","selectedType","setSelectedType","selectedIndex","setSelectedIndex","logicOptions","setLogicOptions","logicVisible","setLogicVisible","optionVisible","setOptionVisible","previewMode","setPreviewMode","layout","labelCol","span","wrapperCol","fillTypeOptions","label","ifMatrix","splice","JSON","stringify","parse","generateUUID","d","Date","getTime","window","performance","now","c","r","Math","random","floor","addQuertion","queSeq","score","weight","minWr","switchChange","form","fillTypeChange","handleOk","flag","inputChange","backgroundColor","max","push","Modal","confirm","icon","ExclamationCircleOutlined","content","okText","cancelText","onOk","message","success","onCancel","info","Item","rows","checkedChildren","unCheckedChildren","changeArrange","openLogic","visible","footer","logicQChange","changeOptions","item","marginLeft","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.13393fcd.chunk.js","sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { Radio, Checkbox, Input, Button, DatePicker, Table, Select } from 'antd';\r\nimport {DeleteOutlined, DownOutlined, CaretUpOutlined, CaretDownOutlined} from '@ant-design/icons';\r\nimport './formBuilder.scss'\r\n\r\nconst { Column } = Table;\r\nconst { Option } = Select;\r\n\r\nfunction FormBuilder(props) {\r\n    const [questionSelect,setQuestionSelect] = useState(null);\r\n    const [optionSelection,setOptionSelection] = useState(new Array(2));\r\n\r\n    // 选择题的classname\r\n    const selectQClassName = (index, oIndex, question) => {\r\n        var className = \"clearfix column \"\r\n        if(index===optionSelection[0]&&oIndex===optionSelection[1]){\r\n            className += \"selected \"\r\n        }\r\n        if(question.queLimit.arrange>1&&question.queLimit.arrange<5){\r\n            className += \"column_\"+question.queLimit.arrange\r\n        }\r\n        return className\r\n    }\r\n    // 选择题的classname\r\n\r\n    //dom\r\n    function SelectQuestion(prop) {\r\n        console.log(\"prop:\",prop)\r\n        const question = prop.question;\r\n        const index = prop.index;\r\n\r\n        //选项前的图标差分\r\n        return (\r\n            <div className={\"questionBox Fselect \"+(questionSelect===index?\"selected\":\"\")} onClick={e=>{e.stopPropagation();selectQuestion(index)}}>\r\n                <div className=\"order\">\r\n                    {index+1}\r\n                </div>\r\n                <dl className=\"wrapper\">\r\n                    <dt>\r\n                        {question.question}\r\n                        <div className=\"iconBox\">\r\n                            {\r\n                                (props.formData&&index!==0&&props.formData.length>1) &&\r\n                                <CaretUpOutlined className=\"icon\" onClick={e=>{e.stopPropagation();switchQuestion('up',index)}}/>\r\n                            }\r\n                            {\r\n                                (props.formData&&index!==props.formData.length-1&&props.formData.length>1) &&\r\n                                <CaretDownOutlined className=\"icon\" onClick={e=>{e.stopPropagation();switchQuestion('down',index)}}/>\r\n                            }\r\n                            <DeleteOutlined className=\"icon\" onClick={e=>{e.stopPropagation();delQuestion(index)}}/>\r\n                        </div>\r\n                    </dt>\r\n                    {question.des &&\r\n                    <dd>{question.des}</dd>}\r\n                    {question.options.map((option,oIndex)=>{\r\n                        return (<dd className={selectQClassName(index,oIndex,question)} key={option.value} onClick={e=>{e.stopPropagation();selectOption(index,oIndex)}}>\r\n                            {question.queType==='Radio'?\r\n                            <Radio value={option.value}>{option.des}</Radio>:\r\n                            question.queType==='Checkbox'?\r\n                            <Checkbox value={option.value}>{option.des}</Checkbox>:\r\n                            question.queType==='Select'?\r\n                            <>\r\n                                <DownOutlined style={{marginRight:10+'px'}}/>\r\n                                <span>{option.des}</span>\r\n                            </>:\r\n                            ''}\r\n                            {\r\n                                (option.hasInput&&question.queType!='Select') &&\r\n                                <Input className=\"input\"/>\r\n                            }\r\n                            {\r\n                                questionSelect===index &&\r\n                                <Button danger style={{marginTop:5+'px'}} className=\"del\" size=\"small\" onClick={e=>{e.stopPropagation();delOption(index,oIndex)}}>删除</Button>\r\n                            }\r\n                        </dd>)\r\n                    })}\r\n                    {\r\n                        questionSelect===index &&\r\n                        <dd className=\"editBox\">\r\n                            <Button className=\"btn\" size=\"large\" onClick={e=>{e.stopPropagation();addOption(index)}}>新增选项</Button>\r\n                        </dd>\r\n                    }\r\n                </dl>\r\n            </div>\r\n        )\r\n    }\r\n    //dom\r\n\r\n    // methods\r\n    const selectQuestion = index=>{\r\n        setQuestionSelect(index)\r\n        setOptionSelection([\"\",\"\"])\r\n        props.selectQuestionF(\"question\",index)\r\n    }\r\n\r\n    const checkType = type=>{\r\n        if(type==='Radio'||type==='Checkbox'||type===\"Select\"){\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const delQuestion = index=>{\r\n        setQuestionSelect(null)\r\n        setOptionSelection([\"\",\"\"])\r\n        props.delQuestionF(\"delQuestion\",index)\r\n    }\r\n\r\n    const switchQuestion = (type, index)=>{\r\n        setQuestionSelect(null)\r\n        setOptionSelection([\"\",\"\"])\r\n        props.switchQuestionF(type, index)\r\n    }\r\n\r\n    const selectOption = (index,oIndex)=>{\r\n        setOptionSelection([index,oIndex]);\r\n        props.selectQuestionF(\"option\",[index,oIndex])\r\n    }\r\n\r\n    const addOption = (index,roc)=>{\r\n        props.addOptionF(index,roc)\r\n    }\r\n\r\n    const delOption = (index,oIndex)=>{\r\n        props.delOptionF(index,oIndex);\r\n    }\r\n\r\n    const ifShow = function(ifShow,index) {\r\n        for(let i=0;i<index;i++) {\r\n            if(ifShow.queOnly===props.formData[i].queOnly) {\r\n                let checkvalue = false;\r\n                if(props.formData[i].queType===\"Checkbox\"){\r\n                    props.formData[i].value.map(function(v){\r\n                        if(v===ifShow.value){\r\n                            checkvalue = true;\r\n                        }\r\n                    })\r\n                } else {\r\n                    if(props.formData[i].value===ifShow.value){\r\n                        checkvalue;\r\n                    }\r\n                }\r\n                if(ifShow.check&&checkvalue) {\r\n                    return true;\r\n                }\r\n                if(!ifShow.check&&!checkvalue){\r\n                    return true;\r\n                }\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    const selectChange = (e,index,type) => {\r\n        let data = props.formData\r\n        if(type==='Radio') {\r\n            data[index].value = e.target.value\r\n            props.updateFormDataF(data)\r\n        } else if(type==='Checkbox') {\r\n            if(data[index].queLimit.maxWr) {\r\n                if(data[index].value.length<data[index].queLimit.maxWr){\r\n                    data[index].value = e;\r\n                    props.updateFormDataF(data)\r\n                }\r\n            } else {\r\n                data[index].value = e;\r\n                props.updateFormDataF(data)\r\n            }\r\n        } else if(type==='Select') {\r\n            data[index].value = e\r\n            props.updateFormDataF(data)\r\n        } else if(type==='DatePicker') {\r\n            data[index].value = e\r\n            props.updateFormDataF(data)\r\n        }\r\n    }\r\n\r\n    const cuptColumn = function(num) {\r\n        let str = \"clearfix column \"\r\n        if(num!=1){\r\n            str+= \"column_\"+num.toString()\r\n        }\r\n        return str\r\n    }\r\n\r\n    const checkCheckbox = function (value,type,index) {\r\n        let data = props.formData\r\n        if(type===\"Number\") {\r\n            value=value.replace(/[^\\d.]/g,'')\r\n        } else if(type===\"ZH\"){\r\n            value=value.replace(/[^\\u4e00-\\u9fa5]/g,'')\r\n        } else if(type===\"EN\"){\r\n            value=value.replace(/[^a-zA-Z]/g,'')\r\n        }\r\n        if(Array.isArray(index)){\r\n            data[index[0]].options[index[1]].value = value;\r\n        } else {\r\n            data[index].value = value;\r\n        }\r\n        props.updateFormDataF(data)\r\n    }\r\n    // methods\r\n\r\n    // useEffect(()=>{\r\n    //     handleFormData();\r\n    // },[props.formData,handleFormData])\r\n\r\n    return (\r\n        <div className=\"formBuilder\" onClick={()=>{selectQuestion(null)}}>\r\n            {\r\n                props.editMode &&\r\n                <div className=\"contentBox\">\r\n                    {props.formData.map((question, index)=>{\r\n                        if(checkType(question.queType)) {\r\n                            return (\r\n                                <SelectQuestion question={question} index={index} key={question.queOnly}>\r\n                                </SelectQuestion>\r\n                            )\r\n                        } else if(question.queType==='DatePicker') {\r\n                            return (\r\n                                <div className={'questionBox '+(questionSelect===index?'selected':'')} onClick={e=>{e.stopPropagation();selectQuestion(index)}} key={question.queOnly}>\r\n                                    <div className=\"order\">\r\n                                        {index+1}\r\n                                    </div>\r\n                                    <dl className=\"wrapper\">\r\n                                        <dt>\r\n                                            {question.question}\r\n                                            <div className=\"iconBox\">\r\n                                                {\r\n                                                    (props.formData&&index!==0&&props.formData.length>1) &&\r\n                                                    <CaretUpOutlined className=\"icon\" onClick={e=>{e.stopPropagation();switchQuestion('up',index)}}/>\r\n                                                }\r\n                                                {\r\n                                                    (props.formData&&index!==props.formData.length-1&&props.formData.length>1) &&\r\n                                                    <CaretDownOutlined className=\"icon\" onClick={e=>{e.stopPropagation();switchQuestion('down',index)}}/>\r\n                                                }\r\n                                                <DeleteOutlined className=\"icon\" onClick={e=>{e.stopPropagation();delQuestion(index)}}/>\r\n                                            </div>\r\n                                        </dt>\r\n                                        {question.des &&\r\n                                        <dd>{question.des}</dd>}\r\n                                        <dd className=\"clearfix\">\r\n                                            <DatePicker/>\r\n                                        </dd>\r\n                                    </dl>\r\n                                </div>\r\n                            )\r\n                        } else if(question.queType==='RadioTable') {\r\n                            return (\r\n                                <div className={'questionBox '+(questionSelect===index?'selected':'')} onClick={e=>{e.stopPropagation();selectQuestion(index)}} key={question.queOnly}>\r\n                                    <div className=\"order\">\r\n                                        {index+1}\r\n                                    </div>\r\n                                    <dl className=\"wrapper\">\r\n                                        <dt>\r\n                                            {question.question}\r\n                                            <div className=\"iconBox\">\r\n                                                {\r\n                                                    (props.formData&&index!==0&&props.formData.length>1) &&\r\n                                                    <CaretUpOutlined className=\"icon\" onClick={e=>{e.stopPropagation();switchQuestion('up',index)}}/>\r\n                                                }\r\n                                                {\r\n                                                    (props.formData&&index!==props.formData.length-1&&props.formData.length>1) &&\r\n                                                    <CaretDownOutlined className=\"icon\" onClick={e=>{e.stopPropagation();switchQuestion('down',index)}}/>\r\n                                                }\r\n                                                <DeleteOutlined className=\"icon\" onClick={e=>{e.stopPropagation();delQuestion(index)}}/>\r\n                                            </div>\r\n                                        </dt>\r\n                                        {question.des &&\r\n                                        <dd>{question.des}</dd>}\r\n                                        <dd className=\"clearfix\" style={{width:'auto'}}>\r\n                                            <Table dataSource={question.options.row}>\r\n                                                <Column title=\"\" dataIndex=\"name\"/>\r\n                                                {question.options.column.map((column,oIndex)=>{\r\n                                                    return (\r\n                                                        <>\r\n                                                        {\r\n                                                            question.queLimit.selectType===\"Radio\"?\r\n                                                            <Column\r\n                                                                title={column.name}\r\n                                                                render={(text) => (\r\n                                                                    <>\r\n                                                                        <Radio.Group value={text.value[0]}>\r\n                                                                            <Radio onClick={()=>{text.value[0]=question.options.column[oIndex].value}} value={question.options.column[oIndex].value}></Radio>\r\n                                                                        </Radio.Group>\r\n                                                                    </>\r\n                                                                )}\r\n                                                            />:\r\n                                                            <Column\r\n                                                                title={column.name}\r\n                                                                render={(text) => (\r\n                                                                    <>\r\n                                                                        <Checkbox onChange={(e)=>{\r\n                                                                            text.value[oIndex]=e.target.checked\r\n                                                                        }}\r\n                                                                        checked={text.value[oIndex]}></Checkbox>\r\n                                                                    </>\r\n                                                                )}\r\n                                                            />\r\n                                                        }\r\n                                                        </>\r\n                                                    )\r\n                                                })}\r\n                                                \r\n                                            </Table>\r\n                                        </dd>\r\n                                        {\r\n                                            questionSelect===index &&\r\n                                            <dd className=\"editBox\">\r\n                                                <Button className=\"btn\" size=\"large\" onClick={e=>{e.stopPropagation();addOption(index,'row')}}>新增行</Button>\r\n                                                <Button className=\"btn\" size=\"large\" onClick={e=>{e.stopPropagation();addOption(index,'column')}}>新增列</Button>\r\n                                            </dd>\r\n                                        }\r\n                                    </dl>\r\n                                </div>\r\n                            )\r\n                        } else if(question.queType==='Input') {\r\n                            return (\r\n                                <div className={'questionBox '+(questionSelect===index?'selected':'')} onClick={e=>{e.stopPropagation();selectQuestion(index)}} key={question.queOnly}>\r\n                                    <div className=\"order\">\r\n                                        {index+1}\r\n                                    </div>\r\n                                    <dl className=\"wrapper\">\r\n                                        <dt>\r\n                                            {question.question}\r\n                                            <div className=\"iconBox\">\r\n                                                {\r\n                                                    (props.formData&&index!==0&&props.formData.length>1) &&\r\n                                                    <CaretUpOutlined className=\"icon\" onClick={e=>{e.stopPropagation();switchQuestion('up',index)}}/>\r\n                                                }\r\n                                                {\r\n                                                    (props.formData&&index!==props.formData.length-1&&props.formData.length>1) &&\r\n                                                    <CaretDownOutlined className=\"icon\" onClick={e=>{e.stopPropagation();switchQuestion('down',index)}}/>\r\n                                                }\r\n                                                <DeleteOutlined className=\"icon\" onClick={e=>{e.stopPropagation();delQuestion(index)}}/>\r\n                                            </div>\r\n                                        </dt>\r\n                                        <dd className=\"clearfix\">\r\n                                            <Input className=\"input\" value={question.value}/>\r\n                                        </dd>\r\n                                    </dl>\r\n                                </div>\r\n                            )\r\n                        } else if(question.queType==='MultiInput') {\r\n                            return (\r\n                                <div className={'questionBox '+(questionSelect===index?'selected':'')} onClick={e=>{e.stopPropagation();selectQuestion(index)}} key={question.queOnly}>\r\n                                    <div className=\"order\">\r\n                                        {index+1}\r\n                                    </div>\r\n                                    <dl className=\"wrapper\">\r\n                                        <dt>\r\n                                            {question.question}\r\n                                            <div className=\"iconBox\">\r\n                                                {\r\n                                                    (props.formData&&index!==0&&props.formData.length>1) &&\r\n                                                    <CaretUpOutlined className=\"icon\" onClick={e=>{e.stopPropagation();switchQuestion('up',index)}}/>\r\n                                                }\r\n                                                {\r\n                                                    (props.formData&&index!==props.formData.length-1&&props.formData.length>1) &&\r\n                                                    <CaretDownOutlined className=\"icon\" onClick={e=>{e.stopPropagation();switchQuestion('down',index)}}/>\r\n                                                }\r\n                                                <DeleteOutlined className=\"icon\" onClick={e=>{e.stopPropagation();delQuestion(index)}}/>\r\n                                            </div>\r\n                                        </dt>\r\n                                        {question.options.map((option,oIndex)=>{\r\n                                            return (<dd className={`clearfix ${(index===optionSelection[0]&&oIndex===optionSelection[1])?'selected':'123'}`} key={oIndex} onClick={e=>{e.stopPropagation();selectOption(index,oIndex)}}>\r\n                                                <div className=\"inputDes\">\r\n                                                    {option.des}\r\n                                                    {\r\n                                                        questionSelect===index &&\r\n                                                        <Button danger style={{marginTop:5+'px'}} className=\"del\" size=\"small\" onClick={()=>{delOption(index,oIndex)}}>删除</Button>\r\n                                                    }\r\n                                                </div>\r\n                                                <Input className=\"input\" value={option.value}/>\r\n                                            </dd>)\r\n                                        })}\r\n                                        {\r\n                                            questionSelect===index &&\r\n                                            <dd className=\"editBox\">\r\n                                                <Button className=\"btn\" size=\"large\" onClick={e=>{e.stopPropagation();addOption(index)}}>新增选项</Button>\r\n                                            </dd>\r\n                                        }\r\n                                    </dl>\r\n                                </div>\r\n                            )\r\n                        } else if(question.queType==='InputTable') {\r\n                            return (\r\n                                <div className={'questionBox '+(questionSelect===index?'selected':'')} onClick={e=>{e.stopPropagation();selectQuestion(index)}} key={question.queOnly}>\r\n                                    <div className=\"order\">\r\n                                        {index+1}\r\n                                    </div>\r\n                                    <dl className=\"wrapper\">\r\n                                        <dt>\r\n                                            {question.question}\r\n                                            <div className=\"iconBox\">\r\n                                                {\r\n                                                    (props.formData&&index!==0&&props.formData.length>1) &&\r\n                                                    <CaretUpOutlined className=\"icon\" onClick={e=>{e.stopPropagation();switchQuestion('up',index)}}/>\r\n                                                }\r\n                                                {\r\n                                                    (props.formData&&index!==props.formData.length-1&&props.formData.length>1) &&\r\n                                                    <CaretDownOutlined className=\"icon\" onClick={e=>{e.stopPropagation();switchQuestion('down',index)}}/>\r\n                                                }\r\n                                                <DeleteOutlined className=\"icon\" onClick={e=>{e.stopPropagation();delQuestion(index)}}/>\r\n                                            </div>\r\n                                        </dt>\r\n                                        {question.des &&\r\n                                        <dd>{question.des}</dd>}\r\n                                        <dd className=\"clearfix\" style={{width:'auto'}}>\r\n                                            <Table dataSource={question.options.row}>\r\n                                                <Column title=\"\" dataIndex=\"name\"/>\r\n                                                {question.options.column.map((column,oIndex)=>{\r\n                                                    return (\r\n                                                        <>\r\n                                                        {\r\n                                                            <Column\r\n                                                                title={column.name}\r\n                                                                key=\"name\"\r\n                                                                render={(text) => (\r\n                                                                    <>\r\n                                                                        <Input value={text.value[oIndex]}></Input>\r\n                                                                    </>\r\n                                                                )}\r\n                                                            />\r\n                                                        }\r\n                                                        </>\r\n                                                    )\r\n                                                })}\r\n                                                \r\n                                            </Table>\r\n                                        </dd>\r\n                                        {\r\n                                            questionSelect===index &&\r\n                                            <dd className=\"editBox\">\r\n                                                <Button className=\"btn\" size=\"large\" onClick={e=>{e.stopPropagation();addOption(index,'row')}}>新增行</Button>\r\n                                                <Button className=\"btn\" size=\"large\" onClick={e=>{e.stopPropagation();addOption(index,'column')}}>新增列</Button>\r\n                                            </dd>\r\n                                        }\r\n                                    </dl>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    })}\r\n                </div>\r\n            }\r\n            {\r\n                !props.editMode &&\r\n                <div className=\"contentBox\">\r\n                    {props.formData.map((question, index)=>{\r\n                        if(checkType(question.queType)) {\r\n                            if(ifShow(question.isShow,index)) {\r\n                                return (\r\n                                    <div className=\"questionBox Fselect\" key={question.queOnly}>\r\n                                        <div className=\"order\">\r\n                                            {\r\n                                                !props.editMode &&\r\n                                                question.queLimit.required &&\r\n                                                <span class=\"red\">*</span>\r\n                                            }\r\n                                            {index+1}\r\n                                        </div>\r\n                                        <dl className=\"wrapper\">\r\n                                            <dt>\r\n                                                {question.question}\r\n                                            </dt>\r\n                                            {question.des &&\r\n                                            <dd>{question.des}</dd>}\r\n                                            {\r\n                                                question.queType==='Radio'?\r\n                                                <Radio.Group onChange={e=>{selectChange(e,index,'Radio')}} value={question.value} style={{width:'100%'}}>\r\n                                                    {\r\n                                                        question.options.map((option,oIndex)=>{\r\n                                                            return(\r\n                                                                <dd key={option.value} className={cuptColumn(question.queLimit.arrange)}>\r\n                                                                    <Radio value={option.value}>{option.des}</Radio>\r\n                                                                    {\r\n                                                                        option.hasInput &&\r\n                                                                        <Input className=\"input\" value={question.inputValue[oIndex]}/>\r\n                                                                    }\r\n                                                                </dd>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                </Radio.Group>:\r\n                                                question.queType==='Checkbox'?\r\n                                                <Checkbox.Group onChange={e=>{selectChange(e,index,'Checkbox')}} value={question.value} style={{width:'100%'}}>\r\n                                                    {\r\n                                                        question.options.map((option,oIndex)=>{\r\n                                                            return(\r\n                                                                <dd key={option.value} className={cuptColumn(question.queLimit.arrange)}>\r\n                                                                    <Checkbox value={option.value}>{option.des}</Checkbox>\r\n                                                                    {\r\n                                                                        option.hasInput &&\r\n                                                                        <Input className=\"input\" value={question.inputValue[oIndex]}/>\r\n                                                                    }\r\n                                                                </dd>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                </Checkbox.Group>:\r\n                                                question.queType===\"Select\"?\r\n                                                <Select style={{width:'100%'}} defaultValue={question.value} onChange={e=>{selectChange(e,index,\"Select\")}}>\r\n                                                    {question.options.map((option)=>{\r\n                                                        return(<Option key={option.value} value={option.value}>{option.des}</Option>)\r\n                                                    })}\r\n                                                </Select>:\r\n                                                \"\"\r\n                                            }\r\n                                        </dl>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        } else if(question.queType==='DatePicker') {\r\n                            if(ifShow(question.isShow,index)) {\r\n                                return (\r\n                                    <div className='questionBox' key={question.queOnly}>\r\n                                        <div className=\"order\">\r\n                                            {\r\n                                                question.queLimit.required &&\r\n                                                <span class=\"red\">*</span>\r\n                                            }\r\n                                            {index+1}\r\n                                        </div>\r\n                                        <dl className=\"wrapper\">\r\n                                            <dt>\r\n                                                {question.question}\r\n                                            </dt>\r\n                                            {question.des &&\r\n                                            <dd>{question.des}</dd>}\r\n                                            <dd className=\"clearfix\">\r\n                                                <DatePicker onChange={(date,str)=>{selectChange(str,index,'DatePicker')}}/>\r\n                                            </dd>\r\n                                        </dl>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        } else if (question.queType==='RadioTable') {\r\n                            if(ifShow(question.isShow,index)) {\r\n                                return (\r\n                                    <div className='questionBox' key={question.queOnly}>\r\n                                        <div className=\"order\">\r\n                                            {\r\n                                                question.queLimit.required &&\r\n                                                <span class=\"red\">*</span>\r\n                                            }\r\n                                            {index+1}\r\n                                        </div>\r\n                                        <dl className=\"wrapper\">\r\n                                            <dt>\r\n                                                {question.question}\r\n                                            </dt>\r\n                                            {question.des &&\r\n                                            <dd>{question.des}</dd>}\r\n                                            <dd className=\"clearfix\" style={{width:'auto'}}>\r\n                                                <Table dataSource={question.options.row}>\r\n                                                    <Column title=\"\" dataIndex=\"name\"/>\r\n                                                    {question.options.column.map((column,oIndex)=>{\r\n                                                        return (\r\n                                                            <>\r\n                                                            {\r\n                                                                question.queLimit.selectType===\"Radio\"?\r\n                                                                <Column\r\n                                                                    title={column.name}\r\n                                                                    render={(text) => (\r\n                                                                        <>\r\n                                                                            <Radio.Group value={text.value[0]}>\r\n                                                                                <Radio onClick={()=>{text.value[0]=question.options.column[oIndex].value}} value={question.options.column[oIndex].value}></Radio>\r\n                                                                            </Radio.Group>\r\n                                                                        </>\r\n                                                                    )}\r\n                                                                />:\r\n                                                                <Column\r\n                                                                    title={column.name}\r\n                                                                    render={(text) => (\r\n                                                                        <>\r\n                                                                            <Checkbox onChange={(e)=>{\r\n                                                                                text.value[oIndex]=e.target.checked\r\n                                                                            }}\r\n                                                                            checked={text.value[oIndex]}></Checkbox>\r\n                                                                        </>\r\n                                                                    )}\r\n                                                                />\r\n                                                            }\r\n                                                            </>\r\n                                                        )\r\n                                                    })}\r\n                                                    \r\n                                                </Table>\r\n                                            </dd>\r\n                                        </dl>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        } else if(question.queType==='Input') {\r\n                            if(ifShow(question.isShow,index)) {\r\n                                return (\r\n                                    <div className='questionBox' key={question.queOnly}>\r\n                                        <div className=\"order\">\r\n                                            {\r\n                                                question.queLimit.required &&\r\n                                                <span class=\"red\">*</span>\r\n                                            }\r\n                                            {index+1}\r\n                                        </div>\r\n                                        <dl className=\"wrapper\">\r\n                                            <dt>\r\n                                                {question.question}\r\n                                            </dt>\r\n                                            <dd className=\"clearfix\">\r\n                                                <Input className=\"input\" maxLength={question.queLimit.maxWr} onChange={e=>{checkCheckbox(e.target.value,question.queLimit.fillType,index)}} value={question.value}/>\r\n                                            </dd>\r\n                                        </dl>\r\n                                    </div>\r\n                                )\r\n                            }   \r\n                        } else if(question.queType==='MultiInput') {\r\n                            if(ifShow(question.isShow,index)) {\r\n                                return (\r\n                                    <div className='questionBox' key={question.queOnly}>\r\n                                        <div className=\"order\">\r\n                                            {\r\n                                                question.queLimit.required &&\r\n                                                <span class=\"red\">*</span>\r\n                                            }\r\n                                            {index+1}\r\n                                        </div>\r\n                                        <dl className=\"wrapper\">\r\n                                            <dt>\r\n                                                {question.question}\r\n                                            </dt>\r\n                                            {question.options.map((option,oIndex)=>{\r\n                                                return (<dd className={`clearfix ${(index===optionSelection[0]&&oIndex===optionSelection[1])?'selected':'123'}`} key={oIndex}>\r\n                                                    <div className=\"inputDes\">\r\n                                                        {option.des}\r\n                                                    </div>\r\n                                                    <Input className=\"input\" maxLength={option.maxWr} onChange={e=>{checkCheckbox(e.target.value,option.fillType,[index,oIndex])}} value={option.value}/>\r\n                                                </dd>)\r\n                                            })}\r\n                                        </dl>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        } else if(question.queType==='InputTable') {\r\n                            if(ifShow(question.isShow,index)) {\r\n                                return (\r\n                                    <div className='questionBox' key={question.queOnly}>\r\n                                        <div className=\"order\">\r\n                                            {\r\n                                                question.queLimit.required &&\r\n                                                <span className=\"red\">*</span>\r\n                                            }\r\n                                            {index+1}\r\n                                        </div>\r\n                                        <dl className=\"wrapper\">\r\n                                            <dt>\r\n                                                {question.question}\r\n                                            </dt>\r\n                                            {question.des &&\r\n                                            <dd>{question.des}</dd>}\r\n                                            <dd className=\"clearfix\" style={{width:'auto'}}>\r\n                                                <Table dataSource={question.options.row}>\r\n                                                    <Column title=\"\" dataIndex=\"name\"/>\r\n                                                    {question.options.column.map((column,oIndex)=>{\r\n                                                        return (\r\n                                                            <>\r\n                                                            {\r\n                                                                <Column\r\n                                                                    title={column.name}\r\n                                                                    key=\"name\"\r\n                                                                    render={(text) => (\r\n                                                                        <>\r\n                                                                            <Input onChange={e=>{text.value[oIndex] = e.target.value}} value={text.value[oIndex]}></Input>\r\n                                                                        </>\r\n                                                                    )}\r\n                                                                />\r\n                                                            }\r\n                                                            </>\r\n                                                        )\r\n                                                    })}\r\n                                                    \r\n                                                </Table>\r\n                                            </dd>\r\n                                        </dl>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        }\r\n                    })}\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormBuilder","import React, { useState } from \"react\";\nimport { Button, Modal, message, Form, Input, Switch, Radio, Select } from 'antd';\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\n\nimport FormBuilder from './components/formBuilder/index'\n\nimport './App.scss'\n\nconst { TextArea } = Input;\nconst { Option } = Select;\n\nfunction App() {\n  // const [formData, setFormData] = useState([\n  //   {\n  //     queType: \"Radio\",\n  //     question: \"这是一个单选题\",\n  //     queOnly: 0,\n  //     queSeq: 0,\n  //     value: 0,\n  //     des: \"\",// 描述\n  //     queLimit: {\n  //       required: false,//必选\n  //       score: 0,// 分值\n  //       weight: 0,// 权重\n  //       arrange: 1,// 选项排列\n  //     },\n  //     isShow: {\n  //       queOnly: \"\",\n  //       value: \"\",\n  //       check: \"\",\n  //     }, // 必要题目序号数组\n  //     options: [\n  //       {\n  //         des: \"选项1\",\n  //         hasInput: false,\n  //         value: 1\n  //       },\n  //       {\n  //         des: \"选项2\",\n  //         hasInput: true,\n  //         value: 2\n  //       }\n  //     ]\n  //   },\n  //   {\n  //     queType: \"Checkbox\",\n  //     question: \"这是一个多选题\",\n  //     queOnly: 1,\n  //     queSeq: 1,\n  //     value: 0,\n  //     des: \"\",\n  //     queLimit: {\n  //       required: false,//必选\n  //       score: 0,// 分值\n  //       weight: 0,// 权重\n  //       arrange: 1,// 选项排列\n  //       minWr: \"\",\n  //       maxWr: \"\"\n  //     },\n  //     isShow: {\n  //       queOnly: \"\",\n  //       value: \"\",\n  //       check: \"\",\n  //     }, // 必要题目序号数组\n  //     options: [\n  //       {\n  //         des: \"选项1\",\n  //         hasInput: false,\n  //         value: 1\n  //       },\n  //       {\n  //         des: \"选项2\",\n  //         hasInput: true,\n  //         value: 2\n  //       }\n  //     ]\n  //   },\n  //   {\n  //     queType: \"Select\",\n  //     question: \"这是一个下拉选择\",\n  //     queOnly: 2,\n  //     queSeq: 2,\n  //     value: 0,\n  //     des: \"\",// 描述\n  //     queLimit: {\n  //       required: false,//必选\n  //       score: 0,// 分值\n  //       weight: 0,// 权重\n  //       arrange: 1,// 选项排列\n  //     },\n  //     isShow: {\n  //       queOnly: \"\",\n  //       value: \"\",\n  //       check: \"\",\n  //     }, // 必要题目序号数组\n  //     options: [\n  //       {\n  //         des: \"选项1\",\n  //         value: 1\n  //       },\n  //       {\n  //         des: \"选项2\",\n  //         value: 2\n  //       }\n  //     ]\n  //   },\n  //   {\n  //     queType: \"DatePicker\",\n  //     question: \"这是一个日期选择\",\n  //     queOnly: 3,\n  //     queSeq: 3,\n  //     value: 0,\n  //     des: \"\",// 描述\n  //     queLimit: {\n  //       required: false,//必选\n  //       score: 0,// 分值\n  //       weight: 0,// 权重\n  //     },\n  //     isShow: {\n  //       queOnly: \"\",\n  //       value: \"\",\n  //       check: \"\",\n  //     }, // 必要题目序号数组\n  //   },\n  //   {\n  //     queType: \"RadioTable\",\n  //     question: \"这是一个矩阵选择\",\n  //     queOnly: 4,\n  //     queSeq: 4,\n  //     des: \"\",// 描述\n  //     queLimit: {\n  //       required: false,//必选\n  //       score: 0,// 分值\n  //       weight: 0,// 权重\n  //       selectType: \"CheckBox\",\n  //       minWr: \"\",\n  //       maxWr: \"\"\n  //     },\n  //     isShow: {\n  //       queOnly: \"\",\n  //       value: \"\",\n  //       check: \"\",\n  //     }, // 必要题目序号数组\n  //     // value: 0,\n  //     options: {\n  //       column: [{ name: \"选项1\", value: 1 }, { name: \"选项2\", value: 2 }],\n  //       row: [{ name: \"行1\", value: [] }, { name: \"行2\", value: [] }],\n  //     }\n  //   },\n  //   {\n  //     queType: \"Input\",\n  //     question: \"这是一个填空题\",\n  //     queOnly: 5,\n  //     queSeq: 5,\n  //     value: \"\",\n  //     des: \"\",\n  //     queLimit: {\n  //       required: false,//必选\n  //       score: 0,// 分值\n  //       weight: 0,// 权重\n  //       fillType: \"Number\",\n  //       minWr: \"\",\n  //       maxWr: \"\"\n  //     },\n  //     isShow: {\n  //       queOnly: \"\",\n  //       value: \"\",\n  //       check: \"\",\n  //     }, // 必要题目序号数组\n  //   },\n  //   {\n  //     queType: \"MultiInput\",\n  //     question: \"这是一个多项选择题\",\n  //     queOnly: 6,\n  //     queSeq: 6,\n  //     value: \"\",\n  //     des: \"\",\n  //     queLimit: {\n  //       required: false,//必选\n  //       score: 0,// 分值\n  //       weight: 0,// 权重\n  //     },\n  //     isShow: {\n  //       queOnly: \"\",\n  //       value: \"\",\n  //       check: \"\",\n  //     }, // 必要题目序号数组\n  //     options: [\n  //       {\n  //         des: \"填空1\",\n  //         value: \"\",\n  //         fillType: \"Number\", // 输入框type：Number,ZH,EN,None\n  //         minWr: \"\",\n  //         maxWr: \"\"\n  //       },\n  //       {\n  //         des: \"填空2\",\n  //         value: \"\",\n  //         fillType: \"None\", // 输入框type：Number,ZH,EN,None\n  //         minWr: \"\",\n  //         maxWr: \"\"\n  //       }\n  //     ]\n  //   },\n  //   {\n  //     queType: \"InputTable\",\n  //     question: \"这是一个矩阵填空\",\n  //     queOnly: 7,\n  //     queSeq: 7,\n  //     // value: \"\",\n  //     des: \"\",// 描述\n  //     queLimit: {\n  //       required: false,//必选\n  //       score: 0,// 分值\n  //       weight: 0,// 权重\n  //     },\n  //     isShow: {\n  //       queOnly: \"\",\n  //       value: \"\",\n  //       check: \"\",\n  //     }, // 必要题目序号数组\n  //     options: {\n  //       column: [{ name: \"选项1\", value: 1 }, { name: \"选项2\", value: 2 }],\n  //       row: [{ name: \"行1\", value: [] }, { name: \"行2\", value: [] }],//值为数组，有多少列就有多少个值\n  //     }\n  //   },\n  // ]);\n  const [formData, setFormData] = useState([])\n  const [editMode, setEditMode] = useState(true);\n  const [selectedType, setSelectedType] = useState(\"\");\n  const [selectedIndex, setSelectedIndex] = useState([]);\n  const [logicOptions, setLogicOptions] = useState([]);\n  //const [logicSelected, setLogicSelected] = useState(-1);\n  const [logicVisible,setLogicVisible] = useState(false);\n  const [optionVisible,setOptionVisible] = useState(false);\n  const [previewMode,setPreviewMode] = useState(false);\n  //let [questionForm] = Form.useForm();\n\n  const layout = {\n    labelCol: {\n      span: 7,\n    },\n    wrapperCol: {\n      span: 17,\n    },\n  };\n  const fillTypeOptions = [{\n    value: 'None',\n    label: '无限制'\n  }, {\n    value: 'Number',\n    label: '数字'\n  }, {\n    value: 'ZH',\n    label: '中文'\n  }, {\n    value: 'EN',\n    label: '英文'\n  }]\n\n  // useEffect(()=>{\n  //   // console.log(questionForm.getFieldValue())\n  //   // questionForm.setFieldsValue(formData[selectedIndex])\n  //   questionForm.resetFields();\n  // },[selectedIndex])\n\n  //methods\n  const selectQuestionF = (type, index) => {\n    //console.log(type,index)\n    if (index === null) {\n      setSelectedType(null);\n      setSelectedIndex([null]);\n      return false;\n    }\n    setSelectedType(type);\n    if (type === \"question\") {\n      setSelectedIndex([index]);\n    } else if (type === \"option\") {\n      setSelectedIndex([...index]);\n    }\n  }\n\n  const delQuestionF = (index) => {\n    Modal.confirm({\n      title: '提示',\n      icon: <ExclamationCircleOutlined />,\n      content: '是否删除该题?',\n      okText: '确认',\n      cancelText: '取消',\n      onOk: () => {\n        setFormData(() => {\n          formData.splice(index, 1);\n          for (let i = 0; i < formData.length; i++) {\n            formData[i].queSeq = i;\n          }\n          return [...formData]\n        })\n        selectQuestionF(\"question\", null)\n        message.success('删除成功!');\n      },\n      onCancel: () => {\n        message.info('已取消删除');\n      }\n    });\n  }\n\n  const switchQuestionF = (type, index) => {\n    selectQuestionF(\"question\", null)\n    setFormData(() => {\n      if (type === \"up\") {\n        [formData[index - 1], formData[index]] = [formData[index], formData[index - 1]];\n      } else if (type === \"down\") {\n        [formData[index], formData[index + 1]] = [formData[index + 1], formData[index]];\n      }\n      for (let i = 0; i < formData.length; i++) {\n        formData[i].queSeq = i;\n      }\n      return [...formData]\n    })\n  }\n\n  const addOptionF = (index, roc) => {\n    const type = formData[index].queType;\n    const options = formData[index].options;\n    if (type === \"Radio\" || type === \"Checkbox\") {\n      let max = 0;\n      for (let i = 0; i < options.length; i++) {\n        if (options[i].value >= max) {\n          max = options[i].value + 1;\n        }\n      }\n      let data = {\n        des: \"选项\" + max,\n        hasInput: false,\n        value: max\n      }\n      formData[index].options.push(data);\n      setFormData([...formData])\n    } else if (type === \"Select\") {\n      let max = 0;\n      for (let i = 0; i < options.length; i++) {\n        if (options[i].value >= max) {\n          max = options[i].value + 1;\n        }\n      }\n      let data = {\n        des: \"选项\" + max,\n        value: max\n      }\n      formData[index].options.push(data);\n      setFormData([...formData])\n    } else if (type === \"RadioTable\") {\n      if (roc && roc === \"row\") {\n        let data = {\n          name: \"新的行\",\n          value: []\n        }\n        formData[index].options.row.push(data);\n        var str = JSON.stringify(formData)\n        setFormData(JSON.parse(str))\n      } else if (roc && roc === \"column\") {\n        let max = 0;\n        for (let i = 0; i < options.column.length; i++) {\n          if (options.column[i].value >= max) {\n            max = options.column[i].value + 1;\n          }\n        }\n        let data = {\n          name: \"选项\" + max,\n          value: max\n        }\n        formData[index].options.column.push(data);\n        var str = JSON.stringify(formData)\n        setFormData(JSON.parse(str))\n      }\n    } else if (type === \"MultiInput\") {\n      let data = {\n        des: \"新填空\",\n        value: \"\",\n        fillType: \"None\",\n        minWr: \"\",\n        maxWr: \"\"\n      }\n      formData[index].options.push(data);\n      setFormData([...formData])\n    } else if (type === \"InputTable\") {\n      if (roc && roc === \"row\") {\n        let data = {\n          name: \"新的行\",\n          value: []\n        }\n        formData[index].options.row.push(data);\n        var str = JSON.stringify(formData)\n        setFormData(JSON.parse(str))\n      } else if (roc && roc === \"column\") {\n        let max = 0;\n        for (let i = 0; i < options.column.length; i++) {\n          if (options.column[i].value >= max) {\n            max = options.column[i].value + 1;\n          }\n        }\n        let data = {\n          name: \"选项\" + max,\n          value: max\n        }\n        formData[index].options.column.push(data);\n        var str = JSON.stringify(formData)\n        setFormData(JSON.parse(str))\n      }\n    }\n  }\n\n  const delOptionF = (index,oIndex,ifMatrix) => {\n    if(ifMatrix) {\n      setSelectedType(null);\n      formData[index].options[ifMatrix].splice(oIndex,1);\n      var str = JSON.stringify(formData);\n      setFormData(JSON.parse(str))\n    } else {\n      setSelectedType(null);\n      formData[index].options.splice(oIndex,1);\n      var str = JSON.stringify(formData);\n      setFormData(JSON.parse(str))\n    }\n  }\n\n  const generateUUID = () => {\n    var d = new Date().getTime();\n    if (window.performance && typeof window.performance.now === \"function\") {\n      d += performance.now(); //use high-precision timer if available\n    }\n    var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      var r = (d + Math.random() * 16) % 16 | 0;\n      d = Math.floor(d / 16);\n      return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n    });\n    return uuid;\n  }\n\n  const addQuertion = (type) => {\n    var data = {};\n    if (type === \"Radio\") {\n      data = {\n        queType: \"Radio\",\n        question: \"这是一个单选题\",\n        queOnly: generateUUID(),\n        queSeq: formData.length,\n        value: \"\",\n        inputValue: [],\n        des: \"\",// 描述\n        queLimit: {\n          required: false,//必选\n          score: 0,// 分值\n          weight: 0,// 权重\n          arrange: 1,// 选项排列\n        },\n        isShow: {\n          queOnly: \"\",\n          value: \"\",\n          check: true,\n        }, // 必要题目序号数组\n        options: [\n          {\n            des: \"选项1\",\n            hasInput: false,\n            value: 1\n          },\n          {\n            des: \"选项2\",\n            hasInput: false,\n            value: 2\n          }\n        ]\n      }\n    } else if (type === \"Checkbox\") {\n      data = {\n        queType: \"Checkbox\",\n        question: \"这是一个多选题\",\n        queOnly: generateUUID(),\n        queSeq: formData.length,\n        value: [],\n        inputValue: [],\n        des: \"\",\n        queLimit: {\n          required: false,//必选\n          score: 0,// 分值\n          weight: 0,// 权重\n          arrange: 1,// 选项排列\n          minWr: \"\",\n          maxWr: \"\"\n        },\n        isShow: {\n          queOnly: \"\",\n          value: \"\",\n          check: true,\n        }, // 必要题目序号数组\n        options: [\n          {\n            des: \"选项1\",\n            hasInput: false,\n            value: 1\n          },\n          {\n            des: \"选项2\",\n            hasInput: false,\n            value: 2\n          }\n        ]\n      }\n    } else if (type === \"Select\") {\n      data = {\n        queType: \"Select\",\n        question: \"这是一个下拉选择\",\n        queOnly: generateUUID(),\n        queSeq: formData.length,\n        value: \"\",\n        des: \"\",// 描述\n        queLimit: {\n          required: false,//必选\n          score: 0,// 分值\n          weight: 0,// 权重\n          arrange: 1,// 选项排列\n        },\n        isShow: {\n          queOnly: \"\",\n          value: \"\",\n          check: true,\n        }, // 必要题目序号数组\n        options: [\n          {\n            des: \"选项1\",\n            value: 1\n          },\n          {\n            des: \"选项2\",\n            value: 2\n          }\n        ]\n      }\n    } else if (type === \"DatePicker\") {\n      data = {\n        queType: \"DatePicker\",\n        question: \"这是一个日期选择\",\n        queOnly: generateUUID(),\n        queSeq: formData.length,\n        value: \"\",\n        des: \"\",// 描述\n        queLimit: {\n          required: false,//必选\n          score: 0,// 分值\n          weight: 0,// 权重\n        },\n        isShow: {\n          queOnly: \"\",\n          value: \"\",\n          check: true,\n        }, // 必要题目序号数组\n      }\n    } else if (type === \"RadioTable\") {\n      data = {\n        queType: \"RadioTable\",\n        question: \"这是一个矩阵选择\",\n        queOnly: generateUUID(),\n        queSeq: formData.length,\n        des: \"\",// 描述\n        queLimit: {\n          required: false,//必选\n          score: 0,// 分值\n          weight: 0,// 权重\n          selectType: \"Radio\",\n          minWr: \"\",\n          maxWr: \"\"\n        },\n        isShow: {\n          queOnly: \"\",\n          value: \"\",\n          check: true,\n        }, // 必要题目序号数组\n        // value: 0,\n        options: {\n          column: [{ name: \"选项1\", value: 1 }, { name: \"选项2\", value: 2 }],\n          row: [{ name: \"行1\", value: [] }, { name: \"行2\", value: [] }],\n        }\n      }\n    } else if (type === \"Input\") {\n      data = {\n        queType: \"Input\",\n        question: \"这是一个填空题\",\n        queOnly: generateUUID(),\n        queSeq: formData.length,\n        value: \"\",\n        des: \"\",\n        queLimit: {\n          required: false,//必选\n          score: 0,// 分值\n          weight: 0,// 权重\n          fillType: \"None\",\n          minWr: \"\",\n          maxWr: \"\"\n        },\n        isShow: {\n          queOnly: \"\",\n          value: \"\",\n          check: true,\n        }, // 必要题目序号数组\n      }\n    } else if (type === \"MultiInput\") {\n      data = {\n        queType: \"MultiInput\",\n        question: \"这是一个多项选择题\",\n        queOnly: generateUUID(),\n        queSeq: formData.length,\n        value: \"\",\n        des: \"\",\n        queLimit: {\n          required: false,//必选\n          score: 0,// 分值\n          weight: 0,// 权重\n        },\n        isShow: {\n          queOnly: \"\",\n          value: \"\",\n          check: true,\n        }, // 必要题目序号数组\n        options: [\n          {\n            des: \"填空1\",\n            value: \"\",\n            fillType: \"None\", // 输入框type：Number,ZH,EN,None\n            minWr: \"\",\n            maxWr: \"\"\n          },\n          {\n            des: \"填空2\",\n            value: \"\",\n            fillType: \"None\", // 输入框type：Number,ZH,EN,None\n            minWr: \"\",\n            maxWr: \"\"\n          }\n        ]\n      }\n    } else if (type === \"InputTable\") {\n      data = {\n        queType: \"InputTable\",\n        question: \"这是一个矩阵填空\",\n        queOnly: generateUUID(),\n        queSeq: formData.length,\n        des: \"\",// 描述\n        queLimit: {\n          required: false,//必选\n          score: 0,// 分值\n          weight: 0,// 权重\n        },\n        isShow: {\n          queOnly: \"\",\n          value: \"\",\n          check: true,\n        }, // 必要题目序号数组\n        options: {\n          column: [{ name: \"选项1\", value: 1 }, { name: \"选项2\", value: 2 }],\n          row: [{ name: \"行1\", value: [] }, { name: \"行2\", value: [] }],//值为数组，有多少列就有多少个值\n        }\n      }\n    }\n\n    setFormData([...formData,data])\n  }\n\n  const switchChange = function(index,check,type) {\n    if(type===\"selectType\"){\n      if(check){\n        formData[index].queLimit[type] = \"Radio\";\n      } else {\n        formData[index].queLimit[type] = \"Checkbox\";\n      }\n    } else if (type===\"hasInput\"){\n      formData[index[0]].options[index[1]].hasInput = check;\n    } else if(type===\"isShow\"){\n      formData[index].isShow.check = check;\n    } else {\n      formData[index].queLimit[type] = check;\n    }\n    let form = JSON.stringify(formData)\n    setFormData(JSON.parse(form))\n  }\n\n  const changeArrange = function(e) {\n    formData[selectedIndex].queLimit.arrange = e.target.value;\n    setFormData([...formData]);\n  }\n\n  const fillTypeChange = function(v,type) {\n    if(type===\"options\"){\n      formData[selectedIndex[0]].options[selectedIndex[1]].fillType = v;\n      setFormData([...formData]);\n    } else {\n      formData[selectedIndex[0]][type].fillType = v;\n      setFormData([...formData]);\n    }\n  }\n\n  const openLogic = function() {\n    if(formData[selectedIndex[0]].isShow.queOnly){\n      let v = formData[selectedIndex[0]].isShow.queOnly;\n      for(let i=0;i<formData.length;i++){\n        if(formData[i].queOnly===v){\n          setLogicOptions(formData[i].options)\n          //setLogicSelected(i)\n          //logicOptions = formData[i].options;\n          //logicSelected = i;\n        }\n      }\n      setFormData([...formData]);\n    } else {\n      setLogicOptions([])\n      //setLogicSelected(-1)\n      //logicOptions = [];\n      //logicSelected = -1;\n    }\n    setLogicVisible(true);\n  }\n\n  const tableOption = function() {\n    setOptionVisible(true)\n  }\n\n  const saveData = function () {\n    console.log(\"保存数据：\",formData)\n    setEditMode(false)\n    setPreviewMode(true)\n  }\n\n  const handleOk = function (flag) {\n    if(flag===\"logic\") {\n      setLogicVisible(false)\n    } else if(flag===\"option\") {\n      setOptionVisible(false)\n    }\n  }\n\n  const logicQChange = function(v) {\n    for(let i=0;i<formData.length;i++){\n      if(formData[i].queOnly===v){\n        setLogicOptions(formData[i].options)\n        //setLogicSelected(i);\n        formData[selectedIndex].isShow.queOnly = v;\n      }\n    }\n  }\n\n  const changeOptions = function(v,index) {\n    formData[index].isShow.value = v;\n    setFormData([...formData]);\n  }\n\n  const updateFormDataF = (data) => {\n    setFormData([...data])\n  }\n\n  const inputChange = (value,prop,flag) => {\n    if(flag===\"queLimit\") {\n      formData[selectedIndex].queLimit[prop] = value;\n    } else if(flag===\"option\") {\n      formData[selectedIndex[0]].options[selectedIndex[1]][prop] = value\n    } else if(flag===\"column\") {\n      formData[selectedIndex[0]].options.column[prop].name = value\n    } else if(flag===\"row\") {\n      formData[selectedIndex[0]].options.row[prop].name = value\n    } else {\n      formData[selectedIndex][prop] = value;\n    }\n    setFormData([...formData])\n  }\n\n  return (\n    <div className=\"App\">\n      {\n        !previewMode &&\n        <div className=\"leftBox\">\n          <dl>\n            <dt className=\"title\">选择题</dt>\n            <dd>\n              <Button size=\"large\" onClick={()=>{addQuertion('Radio')}}>单选题</Button>\n              <Button size=\"large\" onClick={()=>{addQuertion('Checkbox')}}>多选题</Button>\n              <Button size=\"large\" onClick={()=>{addQuertion('Select')}}>下拉题</Button>\n              <Button size=\"large\" onClick={()=>{addQuertion('DatePicker')}}>日期</Button>\n              <Button size=\"large\" onClick={()=>{addQuertion('RadioTable')}}>矩阵选择</Button>\n            </dd>\n          </dl>\n          <dl>\n            <dt className=\"title\">填空题</dt>\n            <dd>\n              <Button size=\"large\" onClick={()=>{addQuertion('Input')}}>填空题</Button>\n              <Button size=\"large\" onClick={()=>{addQuertion('MultiInput')}}>多项填空</Button>\n              <Button size=\"large\" onClick={()=>{addQuertion('InputTable')}}>矩阵填空</Button>\n            </dd>\n          </dl>\n        </div>\n      }\n      <div className=\"middleBox\" style={{backgroundColor: previewMode?'#FFF':'rgba(128,133,144,.15)'}}>\n        <FormBuilder updateFormDataF={updateFormDataF} addOptionF={addOptionF} delOptionF={delOptionF} editMode={editMode} formData={formData} switchQuestionF={switchQuestionF} delQuestionF={delQuestionF} selectQuestionF={selectQuestionF} className=\"formBuilder\"></FormBuilder>\n      </div>\n      {\n        !previewMode &&\n        <div className=\"rightBox\">\n          <div className=\"title\">\n            {selectedType===\"question\"?\"题目设置\":\"选项设置\"}\n          </div>\n          <div className=\"content\">\n            {\n              selectedType===\"question\" &&\n              <Form {...layout} size=\"large\">\n                <Form.Item label=\"题目\">\n                  <Input value={formData[selectedIndex]&&formData[selectedIndex].question} onChange={e=>{inputChange(e.target.value,\"question\")}}/>\n                </Form.Item>\n                <Form.Item label=\"题目描述\">\n                  <TextArea rows={3} value={formData[selectedIndex]&&formData[selectedIndex].des} onChange={e=>{inputChange(e.target.value,\"des\")}}/>\n                </Form.Item>\n                <Form.Item label=\"是否必填\" >\n                  <Switch checked={formData[selectedIndex].queLimit.required} onChange={(check)=>{switchChange(selectedIndex,check,'required')}} />\n                </Form.Item>\n                <Form.Item label=\"题目分值\">\n                  <Input value={formData[selectedIndex]&&formData[selectedIndex].queLimit.score} onChange={e=>{inputChange(e.target.value,\"score\",'queLimit')}}/>\n                </Form.Item>\n                <Form.Item label=\"题目权重\">\n                  <Input value={formData[selectedIndex]&&formData[selectedIndex].queLimit.weight} onChange={e=>{inputChange(e.target.value,\"weight\",'queLimit')}}/>\n                </Form.Item>\n                {\n                  formData[selectedIndex].queType==='RadioTable' &&\n                  <Form.Item label=\"单选/多选\">\n                    <Switch checked={formData[selectedIndex].queLimit.selectType} onChange={(check)=>{switchChange(selectedIndex,check,'selectType')}}  checkedChildren=\"单选\" unCheckedChildren=\"多选\"/>\n                  </Form.Item>\n                }\n                {\n                  (formData[selectedIndex[0]].queType==='Radio'||formData[selectedIndex[0]].queType==='Checkbox') &&\n                  <Form.Item label=\"选项布局\">\n                    <Radio.Group onChange={e=>{changeArrange(e)}} value={formData[selectedIndex].queLimit.arrange}>\n                      <Radio value={1}>单列</Radio>\n                      <Radio value={2}>双列</Radio>\n                      <Radio value={3}>三列</Radio>\n                      <Radio value={4}>四列</Radio>\n                    </Radio.Group>\n                  </Form.Item>\n                }\n                {\n                  formData[selectedIndex[0]].queType==='Input' &&\n                  <>\n                    <Form.Item label=\"最大字数\">\n                      <Input value={formData[selectedIndex]&&formData[selectedIndex].queLimit.maxWr} onChange={e=>{inputChange(e.target.value,\"maxWr\",'queLimit')}}/>\n                    </Form.Item>\n                    <Form.Item label=\"最小字数\">\n                      <Input value={formData[selectedIndex]&&formData[selectedIndex].queLimit.minWr} onChange={e=>{inputChange(e.target.value,\"minWr\",'queLimit')}}/>\n                    </Form.Item>\n                  </>\n                }\n                {\n                  formData[selectedIndex].queType==='Checkbox' &&\n                  <>\n                    <Form.Item label=\"最多选择\">\n                      <Input value={formData[selectedIndex]&&formData[selectedIndex].queLimit.maxWr} onChange={e=>{inputChange(e.target.value,\"maxWr\",'queLimit')}}/>\n                    </Form.Item>\n                    <Form.Item label=\"最少选择\">\n                      <Input value={formData[selectedIndex]&&formData[selectedIndex].queLimit.minWr} onChange={e=>{inputChange(e.target.value,\"minWr\",'queLimit')}}/>\n                    </Form.Item>\n                  </>\n                }\n                {\n                  formData[selectedIndex[0]].queType==='Input' &&\n                  <Form.Item label=\"类型限制\">\n                    <Select defaultValue={formData[selectedIndex[0]].queLimit.fillType} onChange={v=>{fillTypeChange(v,\"queLimit\")}}>\n                      {fillTypeOptions.map((option)=>{\n                        return(<Option key={option.value} value={option.value}>{option.label}</Option>)\n                      })}\n                    </Select>\n                  </Form.Item>\n                }\n                <Form.Item label=\"逻辑设置\">\n                  <Button onClick={()=>{openLogic()}}>逻辑设置</Button>\n                </Form.Item>\n                {\n                  (formData[selectedIndex[0]].queType==='RadioTable'||formData[selectedIndex[0]].queType==='InputTable') &&\n                  <Form.Item label=\"选项设置\">\n                    <Button onClick={()=>{tableOption()}}>选项设置</Button>\n                  </Form.Item>\n                }\n              </Form>\n            }\n            {\n              selectedType==='option' &&\n              <Form {...layout} size=\"large\">\n                <Form.Item label=\"选项\">\n                  <Input value={formData[selectedIndex[0]].options[selectedIndex[1]].des} onChange={e=>{inputChange(e.target.value,\"des\",'option')}}/>\n                </Form.Item>\n                <Form.Item label=\"选项的值\">\n                  <Input value={formData[selectedIndex[0]].options[selectedIndex[1]].value} onChange={e=>{inputChange(e.target.value,\"value\",'option')}}/>\n                </Form.Item>\n                {\n                  (formData[selectedIndex[0]].queType==='Radio'||formData[selectedIndex[0]].queType==='Checkbox') &&\n                  <Form.Item label=\"能否输入\">\n                    <Switch checked={formData[selectedIndex[0]].options[selectedIndex[1]].hasInput} onChange={(check)=>{switchChange(selectedIndex,check,'hasInput')}} />\n                  </Form.Item>\n                }\n                {\n                  formData[selectedIndex[0]].queType==='MultiInput' &&\n                  <>\n                    <Form.Item label=\"最大字数\">\n                      <Input value={formData[selectedIndex[0]].options[selectedIndex[1]].maxWr} onChange={e=>{inputChange(e.target.value,\"maxWr\",'option')}}/>\n                    </Form.Item>\n                    <Form.Item label=\"最小字数\">\n                      <Input value={formData[selectedIndex[0]].options[selectedIndex[1]].minWr} onChange={e=>{inputChange(e.target.value,\"minWr\",'option')}}/>\n                    </Form.Item>\n                    <Form.Item label=\"类型限制\">\n                      <Select defaultValue={formData[selectedIndex[0]].options[selectedIndex[1]].fillType} onChange={v=>{fillTypeChange(v,\"options\")}}>\n                        {fillTypeOptions.map((option)=>{\n                          return(<Option key={option.value} value={option.value}>{option.label}</Option>)\n                        })}\n                      </Select>\n                    </Form.Item>\n                  </>\n                }\n              </Form>\n            }\n          </div>\n          <div className=\"save\" onClick={saveData}>\n            保存\n          </div>\n        </div>\n      }\n      <Modal\n        title=\"逻辑设置\"\n        visible={logicVisible}\n        onCancel={()=>{handleOk(\"logic\")}}\n        footer={[\n          <Button type=\"primary\" onClick={()=>{handleOk(\"logic\")}}>\n            确认\n          </Button>\n        ]}\n      >\n        <Form {...layout} size=\"large\">\n          <Form.Item label=\"题目\">\n            <Select defaultValue={formData[selectedIndex]?formData[selectedIndex].isShow.queOnly:''} onChange={v=>{logicQChange(v)}}>\n              {formData.map((option, index)=>{\n                if((option.queType==='Radio'||option.queType==='Checkbox'||option.queType==='Select')&&index<selectedIndex[0]) {\n                  return(<Option key={option.queOnly} value={option.queOnly}>{option.question}</Option>)\n                }\n              })}\n            </Select>\n          </Form.Item>\n          <Form.Item label=\"选项\">\n            <Select defaultValue={formData[selectedIndex]?formData[selectedIndex].isShow.value:''} onChange={v=>{changeOptions(v,selectedIndex)}}>\n              {logicOptions.map((option)=>{\n                return(<Option key={option.value} value={option.value}>{option.des}</Option>)\n              })}\n            </Select>\n          </Form.Item>\n          <Form.Item label=\"条件\">\n            <Switch checked={formData[selectedIndex]?formData[selectedIndex].isShow.check:''} onChange={(check)=>{switchChange(selectedIndex,check,'isShow')}} />\n          </Form.Item>\n        </Form>\n      </Modal>\n      <Modal\n        title=\"选项设置\"\n        visible={optionVisible}\n        onCancel={()=>{handleOk(\"option\")}}\n        footer={[\n          <Button type=\"primary\" onClick={()=>{handleOk(\"option\")}}>\n            确认\n          </Button>\n        ]}\n      >\n        <Form {...layout} size=\"large\">\n          {\n            formData[selectedIndex[0]] &&\n            formData[selectedIndex[0]].options &&\n            formData[selectedIndex[0]].options.column &&\n            formData[selectedIndex[0]].options.column.map((item, index)=>{\n              return (\n                <Form.Item key={index} label={'选项'+(index+1)}>\n                  <Input style={{width:'80%'}} value={item.name} onChange={e=>{inputChange(e.target.value,index,'column')}}/>\n                  <Button style={{marginLeft:'10px'}} danger className=\"del\" size=\"small\" onClick={()=>{delOptionF(selectedIndex[0],index,'column')}}>删除</Button>\n                </Form.Item>\n              )\n            })\n          }\n          {\n            formData[selectedIndex[0]] &&\n            formData[selectedIndex[0]].options &&\n            formData[selectedIndex[0]].options.row &&\n            formData[selectedIndex[0]].options.row.map((item,index)=>{\n              return (\n                <Form.Item key={index} label={'行'+(index+1)}>\n                  <Input style={{width:'80%'}} value={item.name} onChange={e=>{inputChange(e.target.value,index,'row')}}/>\n                  <Button style={{marginLeft:'10px'}} danger className=\"del\" size=\"small\" onClick={()=>{delOptionF(selectedIndex[0],index,'row')}}>删除</Button>\n                </Form.Item>\n              )\n            })\n          }\n        </Form>\n      </Modal>\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'antd/dist/antd.css'\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}